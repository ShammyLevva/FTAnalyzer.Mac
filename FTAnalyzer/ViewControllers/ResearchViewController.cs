// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Collections.Generic;
using FTAnalyzer.Utilities;

namespace FTAnalyzer.ViewControllers
{
    public partial class ResearchViewController : NSViewController
    {
        AppDelegate App => (AppDelegate)NSApplication.SharedApplication.Delegate;

        public ResearchViewController (IntPtr handle) : base (handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            SetButtonsActive(App.Document != null);
            var userDefaults = new NSUserDefaults();
            var value = userDefaults.IntForKey("CensusProvider");
            CensusSearchProviderOutlet.SelectItem(value);
        }

        public override void ViewDidAppear()
        {
            base.ViewDidAppear();
            SetButtonsActive(App.Document != null);
        }

        void SetButtonsActive(bool active)
        {
            UKColourCensus.Enabled = active;
            IrishColourCensus.Enabled = active;
            USColourCensus.Enabled = active;
            CanadianColourCensus.Enabled = active;
        }

        partial void UKCensusClicked(NSObject sender) => DisplayColourCensus(Countries.UNITED_KINGDOM, sender);

        partial void IrishCensusClicked(NSObject sender) => DisplayColourCensus(Countries.IRELAND, sender);

        partial void USCensusClicked(NSObject sender) => DisplayColourCensus(Countries.UNITED_STATES, sender);

        partial void CanadianCensusClicked(NSObject sender) => DisplayColourCensus(Countries.CANADA, sender);

        partial void ColourBMDClicked(NSObject sender) => DisplayColourBMD(sender);

        partial void SearchProviderChanged(NSObject sender)
        {
            var userDefaults = new NSUserDefaults();
            userDefaults.SetInt(CensusSearchProviderOutlet.SelectedIndex, "CensusProvider");
            userDefaults.Synchronize();
        }

        void DisplayColourCensus(string country, NSObject sender)
        {
            var storyboard = NSStoryboard.FromName("ColourReports", null);
            var ColourCensusWindow = storyboard.InstantiateControllerWithIdentifier("ColourCensusWindow") as NSWindowController;
            RelationTypes relationTypes = new RelationTypes();
            //KI: for compilation List<IDisplayColourCensus> list = FamilyTree.Instance.ColourCensus(country, relationTypes, string.Empty, null, false, false);
            ColourCensusViewController colourCensusViewController = new ColourCensusViewController(country, (int)CensusSearchProviderOutlet.SelectedIndex, CensusRegionOutlet.StringValue);
            //KI: for compilation colourCensusViewController.RefreshDocumentView(new SortableBindingList<IDisplayColourCensus>(list));
            ColourCensusWindow.ContentViewController.AddChildViewController(colourCensusViewController);
            ColourCensusWindow.Window.Title = colourCensusViewController.Title;
            ColourCensusWindow.Window.SetFrame(new CoreGraphics.CGRect(350, 350, 1000, 475), true);
            ColourCensusWindow.ShowWindow(this);

            Analytics.TrackAction(Analytics.MainFormAction, Analytics.ColourCensusEvent);
        }

        void DisplayColourBMD(NSObject sender)
        {
            var storyboard = NSStoryboard.FromName("ColourReports", null);
            var colourBMDWindow = storyboard.InstantiateControllerWithIdentifier("ColourBMDWindow") as NSWindowController;
            RelationTypes relationTypes = new RelationTypes();
            //KI: for compilation List<IDisplayColourBMD> list = FamilyTree.Instance.ColourBMD(relationTypes, string.Empty, null);
            ColourBMDViewController colourBMDViewController = new ColourBMDViewController(CensusRegionOutlet.StringValue, (int)CensusSearchProviderOutlet.SelectedIndex);
            //KI: for compilation colourBMDViewController.RefreshDocumentView(new SortableBindingList<IDisplayColourBMD>(list));
            colourBMDWindow.ContentViewController.AddChildViewController(colourBMDViewController);
            colourBMDWindow.Window.Title = colourBMDViewController.Title;
            colourBMDWindow.Window.SetFrame(new CoreGraphics.CGRect(350, 350, 1000, 475), true);
            colourBMDWindow.ShowWindow(this);

            Analytics.TrackAction(Analytics.MainFormAction, Analytics.ColourBMDEvent);
        }
    }
}
